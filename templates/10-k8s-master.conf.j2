# Managed by Ansible (role: router-k8s)
# DO NOT EDIT!

{% for cluster in router_k8s_clusters %}
frontend HTTP-intern-{{ cluster.name }}
    mode tcp
    bind {{ cluster.ha_ip_intern }}:80
    default_backend kube-apiserver-{{ cluster.name }}

frontend HTTPS-intern-{{ cluster.name }}
    mode tcp
    bind {{ cluster.ha_ip_intern }}:443
    mode     tcp
    timeout client 2147483647
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }
    acl kube-apiserver-{{ cluster.name }} req_ssl_sni -i {{ cluster.ha_domain_intern }}
    use_backend kube-apiserver-{{ cluster.name }} if kube-apiserver-{{ cluster.name }}

backend kube-apiserver-{{ cluster.name }}
    mode      tcp
    timeout server 2147483647
    balance source
    hash-type consistent
    option httpchk GET /healthz HTTP/1.1\r\nHost:\ {{ cluster.ha_domain_intern }}
{% for server in groups[cluster.master_group] %}
    server    {{ hostvars[server]['ansible_hostname'] }}  {{ hostvars[server]['ansible_default_ipv4']['address'] }}:443 check check-ssl ca-file {{ cluster.apiserver_ca }}
{% endfor %}
{% endfor %}

{{ router_k8s_additional_lines }}
