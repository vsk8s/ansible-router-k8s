# Managed by Ansible (role: router-k8s)
# DO NOT EDIT!

frontend HTTP-intern
    mode tcp
    bind {{ kubernetes_ha_ip_intern }}:80
    bind {{ tectonic_master_ip }}:80
    default_backend kube-apiserver

frontend HTTPS-intern
    mode tcp
    bind {{ kubernetes_ha_ip_intern }}:443
    bind {{ tectonic_master_ip }}:443
    mode     tcp
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }
    acl kube-apiserver req_ssl_sni -i {{ kubernetes_ha_domain_intern }}
    use_backend kube-apiserver if kube-apiserver
    default_backend tectonic-bridge-internal-https

backend tectonic-bridge-internal-https
    mode tcp
    server loopback 127.0.0.1:10922 send-proxy-v2

backend kube-apiserver
    mode      tcp
    balance source
    hash-type consistent
    option httpchk GET /healthz HTTP/1.1\r\nHost:\ {{ kubernetes_ha_domain_intern }}
{% for server in groups[kubernetes_ansible_master_group] %}
    server    {{ hostvars[server]['ansible_hostname'] }}  {{ hostvars[server]['ansible_default_ipv4']['address'] }}:443 check check-ssl ca-file {{ router_k8s_apiserver_ca }}
{% endfor %}

